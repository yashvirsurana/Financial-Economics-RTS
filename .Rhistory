source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
# WordCloud from whatapp messages
require(beepr)
require(stringr)
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
png("Desktop/word_cloud.png", width=3508, height=2480)
wordcloud(txt.d$word, txt.d$freq, scale=c(25,3),min.freq=2,
max.words=300, random.order=F, rot.per=.3, colors=col_pal)
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/WhatsappLogAnalyser.R')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
texts <- readLines("Desktop/chat2.txt")
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
source('~/Desktop/sentiment.r')
View(mySentiment)
View(mySentiment)
View(sentimentTotals)
source('~/Desktop/sentiment.r')
View(sentimentTotals)
View(sentimentTotals)
View(sentimentTotals)
View(sentimentTotals)
source('~/Desktop/sentiment.r')
View(mySentiment)
View(mySentiment)
View(sentimentTotals)
#load required libraries
library(ggplot2)
library(lubridate)
source('~/Desktop/R experiment/sentiment.r')
source('~/Desktop/R experiment/sentiment.r')
x <- c(1,2,4)
q <- c(x,x,8)
x[2:3]
oddcount <- function(x)
k <- 0
for (n in x) {}
oddcount <- function(x)
k <- 0
source("oddcount.R")
source("oddcount.R")
ls
return(k)
oddcount <- function(x) {
k <- 0
for (n in x) {
if (n %% 2 == 1) {
k <- k+1
}
}
return(k)
}
oddcount(1,2,3)
x<-c(1,2,4)
q<-1(x,x,8)
q<-c(x,x,8)
oddcount(c(1,3,5))
z<- c("abc", "29 88")
mode(z)
paste(z)
u<- paste("abce", "de", "fff")
u
paste(u,z)
xx<-paste(u,z)
xx
strsplit(xx, " ")
strsplit(u, " ")
m<-rbind(c(1,4),c(2,2))
m
m %*% c(1,1)
m[1,]
m[,2]
x<- list(u=2,v="abc")
x$u
x$v
x
x
d=data.frame(list(kids=c"Jack","Jill"),ages=c(12,10))
d=data.frame(list(kids=c("Jack","Jill"),ages=c(12,10))
asdf
d <- data.frame(list(kids=c("Jack","Jill"),ages=c(12,10))
fw
d
d <- data.frame(list(kids=c("Jack","Jill"),ages=c(12,10)))
d
d
rm(list = ls()) # Clean the memory. Make sure we start from blank.
cat("\014")     # Send ctrl+L to the console and therefore will clear the screen
# getwd() # Give you the current working directory
# setwd() alows you to change the working directory
setwd("/Users/BinPeng/Dropbox/Teaching/2017-2018/Applied Financial Economics/Lectures/Lecture 1 (WK 1-2)/")
source('~/Desktop/University of Bath/Financial Economics/Guide_Assignment.R')
rm(list = ls()) # Clean the memory. Make sure we start from blank.
cat("\014")     # Send ctrl+L to the console and therefore will clear the screen
# getwd() # Give you the current working directory
# setwd() allows you to change the working directory
setwd("/Users/yashvirsurana/Desktop/University of Bath/Financial Economics/")
# NOTE: Place all R code we create and any data we need to call from within R in this R working directory.
df_bank <- read.table("large_bank.csv", header = TRUE, sep = ",")
print(head(df_bank)) # Take a quick look at the data set in R
cat("\n\n")
df_bank <- read.table("large_bank.csv", header = TRUE, sep = ",")
print(head(df_bank)) # Take a quick look at the data set in R
cat("\n\n")
print( summary(df_bank) )  # Generate the descriptive statistics
cat("\n\n")
library(psych)
print( describe(df_bank))
desc_stats <- describe(df_bank) #--Added by YS
write.csv(desc_stats, file = "desc_stats.csv")
# Below we use data of year 1986
year1986 <- c(1,2,3,4)
L_tot    <- dim(df_bank)[1] # Return the total number of rows in your data set
ind_tot  <- 1:L_tot
ind_1986 <- ind_tot[ is.element(df_bank$t, year1986) ] # Give the TRUE indices of the data of year 1987
df_bank  <- df_bank[ind_1987,]
year1986 <- c(1,2,3,4)
L_tot    <- dim(df_bank)[1] # Return the total number of rows in your data set
ind_tot  <- 1:L_tot
ind_1986 <- ind_tot[ is.element(df_bank$t, year1986) ] # Give the TRUE indices of the data of year 1987
df_bank  <- df_bank[ind_1986,]
library(psych) #--Added by YS, psych gives sd, median, range, skew, kurtosis,etc
desc_stats <- describe(df_bank) #--Added by YS
write.csv(desc_stats, file = "desc_stats.csv")
print( summary(df_bank) )
cat("\n\n")
# In particular, we focus on 2nd quarter and unit banking policy only.
Quarter_no <- 1; # For year 1987, quarter 2 means t = 6
Policy_no  <- 1
# Get the indices of the rows with "Policy = 1" and "Quarter = 6",
# i.e., identify the data needed for our application
ind_U <- which(df_bank$POLICY == Policy_no & df_bank$t == Quarter_no)
cat("The proportion of policy", Policy_no, "at Quarter", Quarter_no, "is\n")
cat(length(ind_U)/466, "\n") # Calculate the proportion using unit banking
Quarter_nos <- c(1,2,3,4) # For year 1986, quarter 3 means t = 3
Policy_nos  <- c(1,2,3,4)
for (q in Quarter_nos) { # loop over quarters
for (p in Policy_nos) { # loop over policies
# Get the indices of the rows with "Policy = p" and "Quarter = q",
# i.e., identify the data needed for our application
ind_U <- which(df_bank$POLICY == Policy_no & df_bank$t == Quarter_no)
print("The proportion of policy", Policy_no, "at Quarter", Quarter_no, "is",length(ind_U)/466, "\n")
}
}
Quarter_nos <- c(1,2,3,4) # For year 1986, quarter 3 means t = 3
Policy_nos  <- c(1,2,3,4)
for (q in Quarter_nos) { # loop over quarters
for (p in Policy_nos) { # loop over policies
# Get the indices of the rows with "Policy = p" and "Quarter = q",
# i.e., identify the data needed for our application
ind_U <- which(df_bank$POLICY == p & df_bank$t == q)
print("The proportion of policy", Policy_no, "at Quarter", Quarter_no, "is",length(ind_U)/466, "\n")
}
}
Quarter_nos <- c(1,2,3,4) # For year 1986, quarter 3 means t = 3
Policy_nos  <- c(1,2,3,4)
for (q in Quarter_nos) { # loop over quarters
for (p in Policy_nos) { # loop over policies
# Get the indices of the rows with "Policy = p" and "Quarter = q",
# i.e., identify the data needed for our application
ind_U <- which(df_bank$POLICY == p & df_bank$t == q)
print("The proportion of policy", p, "at Quarter", q, "is",length(ind_U)/466, "\n")
}
}
Quarter_nos <- c(1,2,3,4) # For year 1986, quarter 3 means t = 3
Policy_nos  <- c(1,2,3,4)
for (q in Quarter_nos) { # loop over quarters
for (p in Policy_nos) { # loop over policies
# Get the indices of the rows with "Policy = p" and "Quarter = q",
# i.e., identify the data needed for our application
ind_U <- which(df_bank$POLICY == p & df_bank$t == q)
cat("The proportion of policy", p, "at Quarter", q, "is",length(ind_U)/466, "\n")
}
}
# Constructe the variables for OLS regression
temp <- df_bank[ind_U,]
Y <- log( temp$COST/temp$P_DEPOSI_w3 )
X <- matrix(0, nrow = length(Y), ncol = 5)
X[,1] <- log( temp$P_LABOR_w1/temp$P_DEPOSI_w3 )
X[,2] <- log( temp$P_FUNDS_w2/temp$P_DEPOSI_w3 )
X[,3] <- log( temp$CON_LOAN_y1 )
X[,4] <- log( temp$NONC_LOA_y2 )
X[,5] <- log( temp$SECURITI_y3 )
OLS_output <- lm(Y ~ X)
# summary(OLS_output)
print(summary(OLS_output)$coefficients[,1:2])
RTS <- 1/sum( summary(OLS_output)$coefficients[4:6,1] )
cat("\nRTS is", RTS, "\n")
ind_U <- which(df_bank$POLICY == 1 & df_bank$t == 1)
temp <- df_bank[ind_U,]
Y <- log( temp$COST/temp$P_DEPOSI_w3 )
X <- matrix(0, nrow = length(Y), ncol = 5)
X[,1] <- log( temp$P_LABOR_w1/temp$P_DEPOSI_w3 )
X[,2] <- log( temp$P_FUNDS_w2/temp$P_DEPOSI_w3 )
X[,3] <- log( temp$CON_LOAN_y1 )
X[,4] <- log( temp$NONC_LOA_y2 )
X[,5] <- log( temp$SECURITI_y3 )
OLS_output <- lm(Y ~ X)
# summary(OLS_output)
print(summary(OLS_output)$coefficients[,1:2])
RTS <- 1/sum( summary(OLS_output)$coefficients[4:6,1] )
cat("\nRTS is", RTS, "\n")
print(summary(OLS_output))#$coefficients[,1:2])
RTS <- 1/sum( summary(OLS_output)$coefficients[4:6,1] )
cat("\nRTS is", RTS, "\n")
ind_U <- which(df_bank$POLICY == 1)# & df_bank$t == 1)
# Constructe the variables for OLS regression
temp <- df_bank[ind_U,]
Y <- log( temp$COST/temp$P_DEPOSI_w3 )
X <- matrix(0, nrow = length(Y), ncol = 5)
X[,1] <- log( temp$P_LABOR_w1/temp$P_DEPOSI_w3 )
X[,2] <- log( temp$P_FUNDS_w2/temp$P_DEPOSI_w3 )
X[,3] <- log( temp$CON_LOAN_y1 )
X[,4] <- log( temp$NONC_LOA_y2 )
X[,5] <- log( temp$SECURITI_y3 )
OLS_output <- lm(Y ~ X)
# summary(OLS_output)
print(summary(OLS_output))#$coefficients[,1:2])
RTS <- 1/sum( summary(OLS_output)$coefficients[4:6,1] )
cat("\nRTS is", RTS, "\n")
year1986 <- c(1,2,3,4)
L_tot    <- dim(df_bank)[1] # Return the total number of rows in your data set
ind_tot  <- 1:L_tot
ind_1986 <- ind_tot[ is.element(df_bank$t, year1986) ] # Give the TRUE indices of the data of year 1987
df_bank  <- df_bank[ind_1986,]
ind_U <- which(df_bank$POLICY == 1)# & df_bank$t == 1)
# Constructe the variables for OLS regression
temp <- df_bank[ind_U,]
Y <- log( temp$COST/temp$P_DEPOSI_w3 )
X <- matrix(0, nrow = length(Y), ncol = 5)
X[,1] <- log( temp$P_LABOR_w1/temp$P_DEPOSI_w3 )
X[,2] <- log( temp$P_FUNDS_w2/temp$P_DEPOSI_w3 )
X[,3] <- log( temp$CON_LOAN_y1 )
X[,4] <- log( temp$NONC_LOA_y2 )
X[,5] <- log( temp$SECURITI_y3 )
OLS_output <- lm(Y ~ X)
# summary(OLS_output)
print(summary(OLS_output))#$coefficients[,1:2])
RTS <- 1/sum( summary(OLS_output)$coefficients[4:6,1] )
cat("\nRTS is", RTS, "\n")
ind_U <- which(df_bank$POLICY == 1 & df_bank$t == 1)
# Constructe the variables for OLS regression
temp <- df_bank[ind_U,]
Y <- log( temp$COST/temp$P_DEPOSI_w3 )
X <- matrix(0, nrow = length(Y), ncol = 5)
X[,1] <- log( temp$P_LABOR_w1/temp$P_DEPOSI_w3 )
X[,2] <- log( temp$P_FUNDS_w2/temp$P_DEPOSI_w3 )
X[,3] <- log( temp$CON_LOAN_y1 )
X[,4] <- log( temp$NONC_LOA_y2 )
X[,5] <- log( temp$SECURITI_y3 )
OLS_output <- lm(Y ~ X)
# summary(OLS_output)
print(summary(OLS_output))#$coefficients[,1:2])
RTS <- 1/sum( summary(OLS_output)$coefficients[4:6,1] )
cat("\nRTS is", RTS, "\n")
clear
cs
sa
for (p in Policy_nos) {
ind_U <- which(df_bank$POLICY == p) # & df_bank$t == 1)
# Constructe the variables for OLS regression
temp <- df_bank[ind_U,]
Y <- log( temp$COST/temp$P_DEPOSI_w3 )
X <- matrix(0, nrow = length(Y), ncol = 5)
X[,1] <- log( temp$P_LABOR_w1/temp$P_DEPOSI_w3 )
X[,2] <- log( temp$P_FUNDS_w2/temp$P_DEPOSI_w3 )
X[,3] <- log( temp$CON_LOAN_y1 )
X[,4] <- log( temp$NONC_LOA_y2 )
X[,5] <- log( temp$SECURITI_y3 )
OLS_output <- lm(Y ~ X)
# summary(OLS_output)
print(summary(OLS_output))#$coefficients[,1:2])
RTS <- 1/sum( summary(OLS_output)$coefficients[4:6,1] )
cat("\nRTS is", RTS, "\n")
}
